services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    depends_on:
      - app

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - ./:/var/www
      - ./docker/app/local.ini:/usr/local/etc/php/conf.d/local.ini

  supervisor:
    container_name: supervisor
    build:
      context: .
      dockerfile: ./docker/supervisor/Dockerfile.supervisor
    volumes:
      - ./:/var/www
      - ./docker/supervisor/local.ini:/usr/local/etc/php/conf.d/local.ini
      
  mysql:
    container_name: mysql
    image: mysql:8.4
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

  mysql-testing:
    container_name: mysql-testing
    image: mysql:8.4
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d

  redis:
    container_name: redis
    image: redis:7-alpine
    restart: always
    ports:
      - 6379:6379
    volumes: 
      - redis_data:/var/lib/redis
      
volumes:
  mysql_data:
  redis_data:
